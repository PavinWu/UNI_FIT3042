#!/bin/bash

## COMMENTS

## LIMITATIONs: 
# . -e and -n flag still got through even if invalid	***** (DONT KNOW WHYY???)
# . REQUIRE fdupes to be installed
# . also set files with different names (but same content) as duplicates
# . folder to compress must not be named dup_files_dir (can combine or not?)
# . fdupes not handle duplicate files with different file names
##. currently cannot handle not enough input arguments case *****

### check flag
valid=0
if [ "$(echo $1 | head -c 1)" == "-" ]; then 	# if has a leading dash
	if [ $1 == "-g" ] || [ $1 == "-b" ] || [ $1 == "-c" ]; then 	# if -d or -l or -c
		valid=1		# setting new (bash is more loose?)
	else
		echo "Invalid flag"
	fi	
else	# (no flag set). NOTE: -e* and -n* also come here ?????????
	valid=2
fi

### assign directory
if [ $valid -eq 1 ]; then
	DIR=$3
	outDIR=$2
elif [ $valid -eq 2 ]; then
	DIR=$2
	outDIR=$1
fi

### if valid argument
if [ $valid -eq 1 ] || [ $valid -eq 2 ]; then
	if [ ! -d "$DIR" ]; then	# test if $DIR is a directory
		echo "ERROR: $DIR is not a directory"
		exit 1
	fi
	
	######### Copy folder to /tmp and remove dup there (w/ text file indicating locations)
	cwd="$(pwd)"	# keep current working directory
	indir_name="$(basename $DIR)" 		# get base folder name
	workdir_name="/tmp/work_dir$$/"		# work directory (with ID)
	mkdir "$workdir_name"	# make new folder with script ID to make unique
	
	cp -r "$DIR" "$workdir_name"		# copy to work dir
	cp "$cwd/$(dirname $0)"/move_dup.pl "$workdir_name"		
		# move perl script to work dir (so we can get work dir directly with cwd in perl)
		# $0 gives script's dir relative to cwd (current folder in bash)
	
	pushd "$workdir_name"	# change working folder
	fdupes -r "$indir_name" > dup_files_list.txt # find dup and output to text file
	mkdir dup_files_dir		# make dir for dup files
	
	./move_dup.pl dup_files_list.txt dup_files_dir	# perl script to deal with files
	rm move_dup.pl			# remove perl script from work dir
	
	tar -cf "${cwd}/${outDIR}".tar .	# create tar in script's dir
	popd					# come back to script's dir
	
	######### compress
	if [ $1 == "-g" ]; then
		gzip "$outDIR".tar
	elif [ $1 == "-b" ]; then
		bzip2 "$outDIR".tar
	elif [ $1 == "-c" ]; then
		compress "$outDIR".tar
	fi
	
	rm -r "$workdir_name"		#remove comp_folder
fi
